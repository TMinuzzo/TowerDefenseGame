#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 32-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The 'McgInterop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace McgInterop
{
	/// <summary>
	/// P/Invoke class for module 'dwrite.dll'
	/// </summary>
	public unsafe static partial class dwrite_dll
	{
		// Signature, DWriteCreateFactory_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.DirectWrite.DWrite", "DWriteCreateFactory_")]
		public static int DWriteCreateFactory_(
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.dwrite_dll_PInvokes.DWriteCreateFactory_(
								arg0, 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'd2d1.dll'
	/// </summary>
	public unsafe static partial class d2d1_dll
	{
		// Signature, D2D1CreateFactory_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1CreateFactory_")]
		public static int D2D1CreateFactory_(
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.d2d1_dll_PInvokes.D2D1CreateFactory_(
								arg0, 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, D2D1MakeRotateMatrix_, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Mathematics_Interop_RawVector2__SharpDX__SharpDX_Mathematics_Interop__RawVector2__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1MakeRotateMatrix_")]
		public static void D2D1MakeRotateMatrix_(
					float arg0, 
					global::SharpDX.Mathematics.Interop.RawVector2__SharpDX arg1, 
					void* arg2)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.d2d1_dll_PInvokes.D2D1MakeRotateMatrix_(
								arg0, 
								arg1, 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, D2D1MakeSkewMatrix_, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Mathematics_Interop_RawVector2__SharpDX__SharpDX_Mathematics_Interop__RawVector2__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1MakeSkewMatrix_")]
		public static void D2D1MakeSkewMatrix_(
					float arg0, 
					float arg1, 
					global::SharpDX.Mathematics.Interop.RawVector2__SharpDX arg2, 
					void* arg3)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.d2d1_dll_PInvokes.D2D1MakeSkewMatrix_(
								arg0, 
								arg1, 
								arg2, 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, D2D1IsMatrixInvertible_, [fwd] [return] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Mathematics_Interop_RawBool__SharpDX__SharpDX_Mathematics_Interop__RawBool__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1IsMatrixInvertible_")]
		public static global::SharpDX.Mathematics.Interop.RawBool__SharpDX D2D1IsMatrixInvertible_(void* arg0)
		{
			// Setup
			global::SharpDX.Mathematics.Interop.RawBool__SharpDX unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.d2d1_dll_PInvokes.D2D1IsMatrixInvertible_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, D2D1InvertMatrix_, [fwd] [return] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Mathematics_Interop_RawBool__SharpDX__SharpDX_Mathematics_Interop__RawBool__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1InvertMatrix_")]
		public static global::SharpDX.Mathematics.Interop.RawBool__SharpDX D2D1InvertMatrix_(void* arg0)
		{
			// Setup
			global::SharpDX.Mathematics.Interop.RawBool__SharpDX unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.d2d1_dll_PInvokes.D2D1InvertMatrix_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, D2D1CreateDevice_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1CreateDevice_")]
		public static int D2D1CreateDevice_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.d2d1_dll_PInvokes.D2D1CreateDevice_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, D2D1CreateDeviceContext_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1CreateDeviceContext_")]
		public static int D2D1CreateDeviceContext_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.d2d1_dll_PInvokes.D2D1CreateDeviceContext_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, D2D1ConvertColorSpace_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1ConvertColorSpace_")]
		public static void* D2D1ConvertColorSpace_(
					void* arg0, 
					int arg1, 
					int arg2, 
					void* arg3)
		{
			// Setup
			void* unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = (void*)global::McgInterop.d2d1_dll_PInvokes.D2D1ConvertColorSpace_(
								((void*)arg0), 
								arg1, 
								arg2, 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return (void*)unsafe___value;
		}

		// Signature, D2D1SinCos_, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1SinCos_")]
		public static void D2D1SinCos_(
					float arg0, 
					void* arg1, 
					void* arg2)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.d2d1_dll_PInvokes.D2D1SinCos_(
								arg0, 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, D2D1Tan_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1Tan_")]
		public static float D2D1Tan_(float arg0)
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.d2d1_dll_PInvokes.D2D1Tan_(arg0);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, D2D1Vec3Length_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1Vec3Length_")]
		public static float D2D1Vec3Length_(
					float arg0, 
					float arg1, 
					float arg2)
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.d2d1_dll_PInvokes.D2D1Vec3Length_(
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, D2D1ComputeMaximumScaleFactor_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1ComputeMaximumScaleFactor_")]
		public static float D2D1ComputeMaximumScaleFactor_(void* arg0)
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.d2d1_dll_PInvokes.D2D1ComputeMaximumScaleFactor_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, D2D1GetGradientMeshInteriorPointsFromCoonsPatch_, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct2D1, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct2D1.D2D1", "D2D1GetGradientMeshInteriorPointsFromCoonsPatch_")]
		public static void D2D1GetGradientMeshInteriorPointsFromCoonsPatch_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5, 
					void* arg6, 
					void* arg7, 
					void* arg8, 
					void* arg9, 
					void* arg10, 
					void* arg11, 
					void* arg12, 
					void* arg13, 
					void* arg14, 
					void* arg15)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.d2d1_dll_PInvokes.D2D1GetGradientMeshInteriorPointsFromCoonsPatch_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3), 
								((void*)arg4), 
								((void*)arg5), 
								((void*)arg6), 
								((void*)arg7), 
								((void*)arg8), 
								((void*)arg9), 
								((void*)arg10), 
								((void*)arg11), 
								((void*)arg12), 
								((void*)arg13), 
								((void*)arg14), 
								((void*)arg15)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'd3d11.dll'
	/// </summary>
	public unsafe static partial class d3d11_dll
	{
		// Signature, D3D11CreateDevice_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct3D11, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct3D11.D3D11", "D3D11CreateDevice_")]
		public static int D3D11CreateDevice_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					int arg3, 
					void* arg4, 
					int arg5, 
					int arg6, 
					void* arg7, 
					void* arg8, 
					void* arg9)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.d3d11_dll_PInvokes.D3D11CreateDevice_(
								((void*)arg0), 
								arg1, 
								((void*)arg2), 
								arg3, 
								((void*)arg4), 
								arg5, 
								arg6, 
								((void*)arg7), 
								((void*)arg8), 
								((void*)arg9)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, D3D11On12CreateDevice_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.Direct3D11, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Direct3D11.D3D11", "D3D11On12CreateDevice_")]
		public static int D3D11On12CreateDevice_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					int arg3, 
					void* arg4, 
					int arg5, 
					int arg6, 
					void* arg7, 
					void* arg8, 
					void* arg9)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.d3d11_dll_PInvokes.D3D11On12CreateDevice_(
								((void*)arg0), 
								arg1, 
								((void*)arg2), 
								arg3, 
								((void*)arg4), 
								arg5, 
								arg6, 
								((void*)arg7), 
								((void*)arg8), 
								((void*)arg9)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'kernel32.dll'
	/// </summary>
	public unsafe static partial class kernel32_dll
	{
		// Signature, FormatMessageW, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.ResultDescriptor", "FormatMessageW")]
		public static uint FormatMessageW(
					int dwFlags, 
					global::System.IntPtr lpSource, 
					int dwMessageId, 
					int dwLanguageId, 
					ref global::System.IntPtr lpBuffer, 
					int nSize, 
					global::System.IntPtr Arguments)
		{
			// Setup
			global::System.IntPtr unsafe_lpBuffer;
			uint unsafe___value;
			// Marshalling
			unsafe_lpBuffer = lpBuffer;
			// Call to native method
			unsafe___value = global::McgInterop.kernel32_dll_PInvokes.FormatMessageW(
								dwFlags, 
								lpSource, 
								dwMessageId, 
								dwLanguageId, 
								&(unsafe_lpBuffer), 
								nSize, 
								Arguments
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			lpBuffer = unsafe_lpBuffer;
			// Return
			return unsafe___value;
		}

		// Signature, CloseHandle, [fwd] [return] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Utilities", "CloseHandle")]
		public static bool CloseHandle(global::System.IntPtr handle)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.kernel32_dll_PInvokes.CloseHandle(handle);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			// Return
			return unsafe___value != 0;
		}

		// Signature, ReadFile, [fwd] [return] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.IO.NativeFile", "ReadFile")]
		public static bool ReadFile(
					global::System.IntPtr fileHandle, 
					global::System.IntPtr buffer, 
					int numberOfBytesToRead, 
					out int numberOfBytesRead, 
					global::System.IntPtr overlapped)
		{
			// Setup
			int unsafe_numberOfBytesRead;
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.kernel32_dll_PInvokes.ReadFile(
								fileHandle, 
								buffer, 
								numberOfBytesToRead, 
								&(unsafe_numberOfBytesRead), 
								overlapped
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			numberOfBytesRead = unsafe_numberOfBytesRead;
			// Return
			return unsafe___value != 0;
		}

		// Signature, FlushFileBuffers, [fwd] [return] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.IO.NativeFile", "FlushFileBuffers")]
		public static bool FlushFileBuffers(global::System.IntPtr hFile)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.kernel32_dll_PInvokes.FlushFileBuffers(hFile);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			// Return
			return unsafe___value != 0;
		}

		// Signature, WriteFile, [fwd] [return] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.IO.NativeFile", "WriteFile")]
		public static bool WriteFile(
					global::System.IntPtr fileHandle, 
					global::System.IntPtr buffer, 
					int numberOfBytesToRead, 
					out int numberOfBytesRead, 
					global::System.IntPtr overlapped)
		{
			// Setup
			int unsafe_numberOfBytesRead;
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.kernel32_dll_PInvokes.WriteFile(
								fileHandle, 
								buffer, 
								numberOfBytesToRead, 
								&(unsafe_numberOfBytesRead), 
								overlapped
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			numberOfBytesRead = unsafe_numberOfBytesRead;
			// Return
			return unsafe___value != 0;
		}

		// Signature, SetFilePointerEx, [fwd] [return] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] System_IO_SeekOrigin__System_IO__SeekOrigin__System_IO, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.IO.NativeFile", "SetFilePointerEx")]
		public static bool SetFilePointerEx(
					global::System.IntPtr handle, 
					long distanceToMove, 
					out long distanceToMoveHigh, 
					global::System.IO.SeekOrigin__System_IO seekOrigin)
		{
			// Setup
			long unsafe_distanceToMoveHigh;
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.kernel32_dll_PInvokes.SetFilePointerEx(
								handle, 
								distanceToMove, 
								&(unsafe_distanceToMoveHigh), 
								seekOrigin
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			distanceToMoveHigh = unsafe_distanceToMoveHigh;
			// Return
			return unsafe___value != 0;
		}

		// Signature, SetEndOfFile, [fwd] [return] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.IO.NativeFile", "SetEndOfFile")]
		public static bool SetEndOfFile(global::System.IntPtr handle)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.kernel32_dll_PInvokes.SetEndOfFile(handle);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			// Return
			return unsafe___value != 0;
		}

		// Signature, GetFileAttributesEx, [fwd] [return] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_IO_NativeFile_WIN32_FILE_ATTRIBUTE_DATA__SharpDX__SharpDX_IO__NativeFile_WIN32_FILE_ATTRIBUTE_DATA__SharpDX, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.IO.NativeFile", "GetFileAttributesEx")]
		public static bool GetFileAttributesEx(
					string name, 
					int fileInfoLevel, 
					out global::SharpDX.IO.NativeFile_WIN32_FILE_ATTRIBUTE_DATA__SharpDX lpFileInformation)
		{
			// Setup
			ushort* unsafe_name = default(ushort*);
			global::SharpDX.IO.NativeFile_WIN32_FILE_ATTRIBUTE_DATA__SharpDX unsafe_lpFileInformation;
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_name = name)
			{
				unsafe_name = (ushort*)pinned_name;
				// Call to native method
				unsafe___value = global::McgInterop.kernel32_dll_PInvokes.GetFileAttributesEx(
									unsafe_name, 
									fileInfoLevel, 
									&(unsafe_lpFileInformation)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
				lpFileInformation = unsafe_lpFileInformation;
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, Create, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] SharpDX_IO_NativeFileAccess__SharpDX__NativeFileAccess__SharpDX, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] SharpDX_IO_NativeFileShare__SharpDX__NativeFileShare__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] SharpDX_IO_NativeFileMode__SharpDX__NativeFileMode__SharpDX, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] SharpDX_IO_NativeFileOptions__SharpDX__NativeFileOptions__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.IO.NativeFile", "Create")]
		public static global::System.IntPtr Create(
					string fileName, 
					global::SharpDX.IO.NativeFileAccess__SharpDX desiredAccess, 
					global::SharpDX.IO.NativeFileShare__SharpDX shareMode, 
					global::System.IntPtr securityAttributes, 
					global::SharpDX.IO.NativeFileMode__SharpDX mode, 
					global::SharpDX.IO.NativeFileOptions__SharpDX flagsAndOptions, 
					global::System.IntPtr templateFile)
		{
			// Setup
			ushort* unsafe_fileName = default(ushort*);
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (char* pinned_fileName = fileName)
			{
				unsafe_fileName = (ushort*)pinned_fileName;
				// Call to native method
				unsafe___value = global::McgInterop.kernel32_dll_PInvokes.Create(
									unsafe_fileName, 
									desiredAccess, 
									shareMode, 
									securityAttributes, 
									mode, 
									flagsAndOptions, 
									templateFile
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			}
			// Return
			return unsafe___value;
		}

		// Signature, GetFileSizeEx, [fwd] [return] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.IO.NativeFile", "GetFileSizeEx")]
		public static bool GetFileSizeEx(
					global::System.IntPtr handle, 
					out long fileSize)
		{
			// Setup
			long unsafe_fileSize;
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.kernel32_dll_PInvokes.GetFileSizeEx(
								handle, 
								&(unsafe_fileSize)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			fileSize = unsafe_fileSize;
			// Return
			return unsafe___value != 0;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'ole32.dll'
	/// </summary>
	public unsafe static partial class ole32_dll
	{
		// Signature, CoCreateInstance, [fwd] [return] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Result__SharpDX__SharpDX__Result__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableStructPtrMarshaller] System_Guid__System.Guid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] SharpDX_Utilities_CLSCTX__SharpDX__Utilities_CLSCTX__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableStructPtrMarshaller] System_Guid__System.Guid *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Utilities", "CoCreateInstance")]
		public static global::SharpDX.Result__SharpDX CoCreateInstance(
					global::System.Guid rclsid, 
					global::System.IntPtr pUnkOuter, 
					global::SharpDX.Utilities_CLSCTX__SharpDX dwClsContext, 
					global::System.Guid riid, 
					out global::System.IntPtr comObject)
		{
			// Setup
			global::System.Guid* unsafe_rclsid;
			global::System.Guid* unsafe_riid;
			global::System.IntPtr unsafe_comObject;
			global::SharpDX.Result__SharpDX unsafe___value;
			// Marshalling
			unsafe_rclsid = (global::System.Guid*)&(rclsid);
			unsafe_riid = (global::System.Guid*)&(riid);
			// Call to native method
			unsafe___value = global::McgInterop.ole32_dll_PInvokes.CoCreateInstance(
								unsafe_rclsid, 
								pUnkOuter, 
								dwClsContext, 
								unsafe_riid, 
								&(unsafe_comObject)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			comObject = unsafe_comObject;
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'kernel32'
	/// </summary>
	public unsafe static partial class kernel32
	{
		// Signature, GetProcAddress_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.AnsiStringMarshaller] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.Utilities", "GetProcAddress_")]
		public static global::System.IntPtr GetProcAddress_(
					global::System.IntPtr hModule, 
					string procName)
		{
			// Setup
			byte* unsafe_procName = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_procName = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(procName, true, false);
				// Call to native method
				unsafe___value = global::McgInterop.kernel32_PInvokes.GetProcAddress_(
									hModule, 
									unsafe_procName
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_procName);
			}
		}
	}

	/// <summary>
	/// P/Invoke class for module 'dxgi.dll'
	/// </summary>
	public unsafe static partial class dxgi_dll
	{
		// Signature, CreateDXGIFactory1_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.DXGI, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.DXGI.DXGI", "CreateDXGIFactory1_")]
		public static int CreateDXGIFactory1_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.dxgi_dll_PInvokes.CreateDXGIFactory1_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, CreateDXGIFactory2_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.DXGI, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.DXGI.DXGI", "CreateDXGIFactory2_")]
		public static int CreateDXGIFactory2_(
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.dxgi_dll_PInvokes.CreateDXGIFactory2_(
								arg0, 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'Mfplat.dll'
	/// </summary>
	public unsafe static partial class Mfplat_dll
	{
		// Signature, MFCreateVideoPresenter_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateVideoPresenter_")]
		public static int MFCreateVideoPresenter_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateVideoPresenter_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateVideoMixer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateVideoMixer_")]
		public static int MFCreateVideoMixer_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateVideoMixer_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateVideoMixerAndPresenter_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateVideoMixerAndPresenter_")]
		public static int MFCreateVideoMixerAndPresenter_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateVideoMixerAndPresenter_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3), 
								((void*)arg4), 
								((void*)arg5)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateVideoSampleFromSurface_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateVideoSampleFromSurface_")]
		public static int MFCreateVideoSampleFromSurface_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateVideoSampleFromSurface_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateVideoSampleAllocator_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateVideoSampleAllocator_")]
		public static int MFCreateVideoSampleAllocator_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateVideoSampleAllocator_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFStartup_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFStartup_")]
		public static int MFStartup_(
					int arg0, 
					int arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFStartup_(
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFShutdown_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFShutdown_")]
		public static int MFShutdown_()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFShutdown_();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFLockPlatform_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFLockPlatform_")]
		public static int MFLockPlatform_()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFLockPlatform_();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFUnlockPlatform_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFUnlockPlatform_")]
		public static int MFUnlockPlatform_()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFUnlockPlatform_();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFPutWorkItem_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFPutWorkItem_")]
		public static int MFPutWorkItem_(
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFPutWorkItem_(
								arg0, 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFPutWorkItem2_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFPutWorkItem2_")]
		public static int MFPutWorkItem2_(
					int arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFPutWorkItem2_(
								arg0, 
								arg1, 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFPutWorkItemEx_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFPutWorkItemEx_")]
		public static int MFPutWorkItemEx_(
					int arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFPutWorkItemEx_(
								arg0, 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFPutWorkItemEx2_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFPutWorkItemEx2_")]
		public static int MFPutWorkItemEx2_(
					int arg0, 
					int arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFPutWorkItemEx2_(
								arg0, 
								arg1, 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFPutWaitingWorkItem_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFPutWaitingWorkItem_")]
		public static int MFPutWaitingWorkItem_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFPutWaitingWorkItem_(
								((void*)arg0), 
								arg1, 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFAllocateSerialWorkQueue_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFAllocateSerialWorkQueue_")]
		public static int MFAllocateSerialWorkQueue_(
					int arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFAllocateSerialWorkQueue_(
								arg0, 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFScheduleWorkItemEx_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFScheduleWorkItemEx_")]
		public static int MFScheduleWorkItemEx_(
					void* arg0, 
					long arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFScheduleWorkItemEx_(
								((void*)arg0), 
								arg1, 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFScheduleWorkItem_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFScheduleWorkItem_")]
		public static int MFScheduleWorkItem_(
					void* arg0, 
					void* arg1, 
					long arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFScheduleWorkItem_(
								((void*)arg0), 
								((void*)arg1), 
								arg2, 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCancelWorkItem_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCancelWorkItem_")]
		public static int MFCancelWorkItem_(long arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCancelWorkItem_(arg0);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetTimerPeriodicity_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetTimerPeriodicity_")]
		public static int MFGetTimerPeriodicity_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetTimerPeriodicity_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFAddPeriodicCallback_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFAddPeriodicCallback_")]
		public static int MFAddPeriodicCallback_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFAddPeriodicCallback_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFRemovePeriodicCallback_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFRemovePeriodicCallback_")]
		public static int MFRemovePeriodicCallback_(int arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFRemovePeriodicCallback_(arg0);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFAllocateWorkQueueEx_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFAllocateWorkQueueEx_")]
		public static int MFAllocateWorkQueueEx_(
					int arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFAllocateWorkQueueEx_(
								arg0, 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFAllocateWorkQueue_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFAllocateWorkQueue_")]
		public static int MFAllocateWorkQueue_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFAllocateWorkQueue_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFLockWorkQueue_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFLockWorkQueue_")]
		public static int MFLockWorkQueue_(int arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFLockWorkQueue_(arg0);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFUnlockWorkQueue_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFUnlockWorkQueue_")]
		public static int MFUnlockWorkQueue_(int arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFUnlockWorkQueue_(arg0);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFBeginRegisterWorkQueueWithMMCSS_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFBeginRegisterWorkQueueWithMMCSS_")]
		public static int MFBeginRegisterWorkQueueWithMMCSS_(
					int arg0, 
					void* arg1, 
					int arg2, 
					void* arg3, 
					void* arg4)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFBeginRegisterWorkQueueWithMMCSS_(
								arg0, 
								((void*)arg1), 
								arg2, 
								((void*)arg3), 
								((void*)arg4)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFBeginRegisterWorkQueueWithMMCSSEx_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFBeginRegisterWorkQueueWithMMCSSEx_")]
		public static int MFBeginRegisterWorkQueueWithMMCSSEx_(
					int arg0, 
					void* arg1, 
					int arg2, 
					int arg3, 
					void* arg4, 
					void* arg5)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFBeginRegisterWorkQueueWithMMCSSEx_(
								arg0, 
								((void*)arg1), 
								arg2, 
								arg3, 
								((void*)arg4), 
								((void*)arg5)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFEndRegisterWorkQueueWithMMCSS_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFEndRegisterWorkQueueWithMMCSS_")]
		public static int MFEndRegisterWorkQueueWithMMCSS_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFEndRegisterWorkQueueWithMMCSS_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFBeginUnregisterWorkQueueWithMMCSS_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFBeginUnregisterWorkQueueWithMMCSS_")]
		public static int MFBeginUnregisterWorkQueueWithMMCSS_(
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFBeginUnregisterWorkQueueWithMMCSS_(
								arg0, 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFEndUnregisterWorkQueueWithMMCSS_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFEndUnregisterWorkQueueWithMMCSS_")]
		public static int MFEndUnregisterWorkQueueWithMMCSS_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFEndUnregisterWorkQueueWithMMCSS_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetWorkQueueMMCSSClass_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetWorkQueueMMCSSClass_")]
		public static int MFGetWorkQueueMMCSSClass_(
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetWorkQueueMMCSSClass_(
								arg0, 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetWorkQueueMMCSSTaskId_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetWorkQueueMMCSSTaskId_")]
		public static int MFGetWorkQueueMMCSSTaskId_(
					int arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetWorkQueueMMCSSTaskId_(
								arg0, 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFRegisterPlatformWithMMCSS_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFRegisterPlatformWithMMCSS_")]
		public static int MFRegisterPlatformWithMMCSS_(
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFRegisterPlatformWithMMCSS_(
								((void*)arg0), 
								((void*)arg1), 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFUnregisterPlatformFromMMCSS_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFUnregisterPlatformFromMMCSS_")]
		public static int MFUnregisterPlatformFromMMCSS_()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFUnregisterPlatformFromMMCSS_();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFLockSharedWorkQueue_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFLockSharedWorkQueue_")]
		public static int MFLockSharedWorkQueue_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFLockSharedWorkQueue_(
								((void*)arg0), 
								arg1, 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetWorkQueueMMCSSPriority_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetWorkQueueMMCSSPriority_")]
		public static int MFGetWorkQueueMMCSSPriority_(
					int arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetWorkQueueMMCSSPriority_(
								arg0, 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateAsyncResult_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateAsyncResult_")]
		public static int MFCreateAsyncResult_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateAsyncResult_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFInvokeCallback_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFInvokeCallback_")]
		public static int MFInvokeCallback_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFInvokeCallback_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateFile_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateFile_")]
		public static int MFCreateFile_(
					int arg0, 
					int arg1, 
					int arg2, 
					void* arg3, 
					void* arg4)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateFile_(
								arg0, 
								arg1, 
								arg2, 
								((void*)arg3), 
								((void*)arg4)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateTempFile_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateTempFile_")]
		public static int MFCreateTempFile_(
					int arg0, 
					int arg1, 
					int arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateTempFile_(
								arg0, 
								arg1, 
								arg2, 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFBeginCreateFile_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFBeginCreateFile_")]
		public static int MFBeginCreateFile_(
					int arg0, 
					int arg1, 
					int arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5, 
					void* arg6)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFBeginCreateFile_(
								arg0, 
								arg1, 
								arg2, 
								((void*)arg3), 
								((void*)arg4), 
								((void*)arg5), 
								((void*)arg6)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFEndCreateFile_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFEndCreateFile_")]
		public static int MFEndCreateFile_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFEndCreateFile_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCancelCreateFile_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCancelCreateFile_")]
		public static int MFCancelCreateFile_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCancelCreateFile_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMemoryBuffer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMemoryBuffer_")]
		public static int MFCreateMemoryBuffer_(
					int arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMemoryBuffer_(
								arg0, 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMediaBufferWrapper_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMediaBufferWrapper_")]
		public static int MFCreateMediaBufferWrapper_(
					void* arg0, 
					int arg1, 
					int arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMediaBufferWrapper_(
								((void*)arg0), 
								arg1, 
								arg2, 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateLegacyMediaBufferOnMFMediaBuffer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateLegacyMediaBufferOnMFMediaBuffer_")]
		public static int MFCreateLegacyMediaBufferOnMFMediaBuffer_(
					void* arg0, 
					void* arg1, 
					int arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateLegacyMediaBufferOnMFMediaBuffer_(
								((void*)arg0), 
								((void*)arg1), 
								arg2, 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFMapDX9FormatToDXGIFormat_, [fwd] [return] [Mcg.CodeGen.EnumMarshaller] SharpDX_DXGI_Format__SharpDX_DXGI__Format__SharpDX_DXGI, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFMapDX9FormatToDXGIFormat_")]
		public static global::SharpDX.DXGI.Format__SharpDX_DXGI MFMapDX9FormatToDXGIFormat_(int arg0)
		{
			// Setup
			global::SharpDX.DXGI.Format__SharpDX_DXGI unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFMapDX9FormatToDXGIFormat_(arg0);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFMapDXGIFormatToDX9Format_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFMapDXGIFormatToDX9Format_")]
		public static int MFMapDXGIFormatToDX9Format_(int arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFMapDXGIFormatToDX9Format_(arg0);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFLockDXGIDeviceManager_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFLockDXGIDeviceManager_")]
		public static int MFLockDXGIDeviceManager_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFLockDXGIDeviceManager_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFUnlockDXGIDeviceManager_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFUnlockDXGIDeviceManager_")]
		public static int MFUnlockDXGIDeviceManager_()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFUnlockDXGIDeviceManager_();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateDXSurfaceBuffer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Mathematics_Interop_RawBool__SharpDX__SharpDX_Mathematics_Interop__RawBool__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateDXSurfaceBuffer_")]
		public static int MFCreateDXSurfaceBuffer_(
					void* arg0, 
					void* arg1, 
					global::SharpDX.Mathematics.Interop.RawBool__SharpDX arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateDXSurfaceBuffer_(
								((void*)arg0), 
								((void*)arg1), 
								arg2, 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateWICBitmapBuffer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateWICBitmapBuffer_")]
		public static int MFCreateWICBitmapBuffer_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateWICBitmapBuffer_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateDXGISurfaceBuffer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Mathematics_Interop_RawBool__SharpDX__SharpDX_Mathematics_Interop__RawBool__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateDXGISurfaceBuffer_")]
		public static int MFCreateDXGISurfaceBuffer_(
					void* arg0, 
					void* arg1, 
					int arg2, 
					global::SharpDX.Mathematics.Interop.RawBool__SharpDX arg3, 
					void* arg4)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateDXGISurfaceBuffer_(
								((void*)arg0), 
								((void*)arg1), 
								arg2, 
								arg3, 
								((void*)arg4)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateVideoSampleAllocatorEx_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateVideoSampleAllocatorEx_")]
		public static int MFCreateVideoSampleAllocatorEx_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateVideoSampleAllocatorEx_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateDXGIDeviceManager_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateDXGIDeviceManager_")]
		public static int MFCreateDXGIDeviceManager_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateDXGIDeviceManager_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateAlignedMemoryBuffer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateAlignedMemoryBuffer_")]
		public static int MFCreateAlignedMemoryBuffer_(
					int arg0, 
					int arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateAlignedMemoryBuffer_(
								arg0, 
								arg1, 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMediaEvent_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Result__SharpDX__SharpDX__Result__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMediaEvent_")]
		public static int MFCreateMediaEvent_(
					int arg0, 
					void* arg1, 
					global::SharpDX.Result__SharpDX arg2, 
					void* arg3, 
					void* arg4)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMediaEvent_(
								arg0, 
								((void*)arg1), 
								arg2, 
								((void*)arg3), 
								((void*)arg4)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateEventQueue_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateEventQueue_")]
		public static int MFCreateEventQueue_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateEventQueue_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSample_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSample_")]
		public static int MFCreateSample_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateSample_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateAttributes_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateAttributes_")]
		public static int MFCreateAttributes_(
					void* arg0, 
					int arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateAttributes_(
								((void*)arg0), 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFInitAttributesFromBlob_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFInitAttributesFromBlob_")]
		public static int MFInitAttributesFromBlob_(
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFInitAttributesFromBlob_(
								((void*)arg0), 
								((void*)arg1), 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetAttributesAsBlobSize_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetAttributesAsBlobSize_")]
		public static int MFGetAttributesAsBlobSize_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetAttributesAsBlobSize_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetAttributesAsBlob_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetAttributesAsBlob_")]
		public static int MFGetAttributesAsBlob_(
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetAttributesAsBlob_(
								((void*)arg0), 
								((void*)arg1), 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFTRegister_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFTRegister_")]
		public static int MFTRegister_(
					global::System.Guid arg0, 
					global::System.Guid arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					void* arg5, 
					int arg6, 
					void* arg7, 
					void* arg8)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFTRegister_(
								arg0, 
								arg1, 
								((void*)arg2), 
								arg3, 
								arg4, 
								((void*)arg5), 
								arg6, 
								((void*)arg7), 
								((void*)arg8)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFTUnregister_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFTUnregister_")]
		public static int MFTUnregister_(global::System.Guid arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFTUnregister_(arg0);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFTRegisterLocal_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFTRegisterLocal_")]
		public static int MFTRegisterLocal_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					void* arg5, 
					int arg6, 
					void* arg7)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFTRegisterLocal_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								arg3, 
								arg4, 
								((void*)arg5), 
								arg6, 
								((void*)arg7)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFTUnregisterLocal_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFTUnregisterLocal_")]
		public static int MFTUnregisterLocal_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFTUnregisterLocal_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFTRegisterLocalByCLSID_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFTRegisterLocalByCLSID_")]
		public static int MFTRegisterLocalByCLSID_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					void* arg5, 
					int arg6, 
					void* arg7)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFTRegisterLocalByCLSID_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								arg3, 
								arg4, 
								((void*)arg5), 
								arg6, 
								((void*)arg7)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFTUnregisterLocalByCLSID_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFTUnregisterLocalByCLSID_")]
		public static int MFTUnregisterLocalByCLSID_(global::System.Guid arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFTUnregisterLocalByCLSID_(arg0);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFTEnum_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFTEnum_")]
		public static int MFTEnum_(
					global::System.Guid arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5, 
					void* arg6)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFTEnum_(
								arg0, 
								arg1, 
								((void*)arg2), 
								((void*)arg3), 
								((void*)arg4), 
								((void*)arg5), 
								((void*)arg6)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFTEnumEx_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFTEnumEx_")]
		public static int MFTEnumEx_(
					global::System.Guid arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFTEnumEx_(
								arg0, 
								arg1, 
								((void*)arg2), 
								((void*)arg3), 
								((void*)arg4), 
								((void*)arg5)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFTEnum2_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFTEnum2_")]
		public static int MFTEnum2_(
					global::System.Guid arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5, 
					void* arg6)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFTEnum2_(
								arg0, 
								arg1, 
								((void*)arg2), 
								((void*)arg3), 
								((void*)arg4), 
								((void*)arg5), 
								((void*)arg6)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFTGetInfo_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFTGetInfo_")]
		public static int MFTGetInfo_(
					global::System.Guid arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5, 
					void* arg6)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFTGetInfo_(
								arg0, 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3), 
								((void*)arg4), 
								((void*)arg5), 
								((void*)arg6)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetPluginControl_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetPluginControl_")]
		public static int MFGetPluginControl_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetPluginControl_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetMFTMerit_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetMFTMerit_")]
		public static int MFGetMFTMerit_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetMFTMerit_(
								((void*)arg0), 
								arg1, 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFRegisterLocalSchemeHandler_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFRegisterLocalSchemeHandler_")]
		public static int MFRegisterLocalSchemeHandler_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFRegisterLocalSchemeHandler_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFRegisterLocalByteStreamHandler_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFRegisterLocalByteStreamHandler_")]
		public static int MFRegisterLocalByteStreamHandler_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFRegisterLocalByteStreamHandler_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMFByteStreamWrapper_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMFByteStreamWrapper_")]
		public static int MFCreateMFByteStreamWrapper_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMFByteStreamWrapper_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMediaExtensionActivate_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMediaExtensionActivate_")]
		public static int MFCreateMediaExtensionActivate_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMediaExtensionActivate_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMuxStreamAttributes_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMuxStreamAttributes_")]
		public static int MFCreateMuxStreamAttributes_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMuxStreamAttributes_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMuxStreamMediaType_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMuxStreamMediaType_")]
		public static int MFCreateMuxStreamMediaType_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMuxStreamMediaType_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMuxStreamSample_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMuxStreamSample_")]
		public static int MFCreateMuxStreamSample_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMuxStreamSample_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFValidateMediaTypeSize_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFValidateMediaTypeSize_")]
		public static int MFValidateMediaTypeSize_(
					global::System.Guid arg0, 
					void* arg1, 
					int arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFValidateMediaTypeSize_(
								arg0, 
								((void*)arg1), 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMediaType_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMediaType_")]
		public static int MFCreateMediaType_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMediaType_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMFVideoFormatFromMFMediaType_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMFVideoFormatFromMFMediaType_")]
		public static int MFCreateMFVideoFormatFromMFMediaType_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMFVideoFormatFromMFMediaType_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateWaveFormatExFromMFMediaType_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateWaveFormatExFromMFMediaType_")]
		public static int MFCreateWaveFormatExFromMFMediaType_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					int arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateWaveFormatExFromMFMediaType_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCalculateBitmapImageSize_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCalculateBitmapImageSize_")]
		public static int MFCalculateBitmapImageSize_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCalculateBitmapImageSize_(
								((void*)arg0), 
								arg1, 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCalculateImageSize_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCalculateImageSize_")]
		public static int MFCalculateImageSize_(
					void* arg0, 
					int arg1, 
					int arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCalculateImageSize_(
								((void*)arg0), 
								arg1, 
								arg2, 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFFrameRateToAverageTimePerFrame_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFFrameRateToAverageTimePerFrame_")]
		public static int MFFrameRateToAverageTimePerFrame_(
					int arg0, 
					int arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFFrameRateToAverageTimePerFrame_(
								arg0, 
								arg1, 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFAverageTimePerFrameToFrameRate_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFAverageTimePerFrameToFrameRate_")]
		public static int MFAverageTimePerFrameToFrameRate_(
					long arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFAverageTimePerFrameToFrameRate_(
								arg0, 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFInitMediaTypeFromMFVideoFormat_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFInitMediaTypeFromMFVideoFormat_")]
		public static int MFInitMediaTypeFromMFVideoFormat_(
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFInitMediaTypeFromMFVideoFormat_(
								((void*)arg0), 
								((void*)arg1), 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFInitMediaTypeFromWaveFormatEx_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFInitMediaTypeFromWaveFormatEx_")]
		public static int MFInitMediaTypeFromWaveFormatEx_(
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFInitMediaTypeFromWaveFormatEx_(
								((void*)arg0), 
								((void*)arg1), 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCompareFullToPartialMediaType_, [fwd] [return] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Mathematics_Interop_RawBool__SharpDX__SharpDX_Mathematics_Interop__RawBool__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCompareFullToPartialMediaType_")]
		public static global::SharpDX.Mathematics.Interop.RawBool__SharpDX MFCompareFullToPartialMediaType_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			global::SharpDX.Mathematics.Interop.RawBool__SharpDX unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCompareFullToPartialMediaType_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFWrapMediaType_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFWrapMediaType_")]
		public static int MFWrapMediaType_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFWrapMediaType_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFUnwrapMediaType_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFUnwrapMediaType_")]
		public static int MFUnwrapMediaType_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFUnwrapMediaType_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateVideoMediaType_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateVideoMediaType_")]
		public static int MFCreateVideoMediaType_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateVideoMediaType_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateVideoMediaTypeFromSubtype_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateVideoMediaTypeFromSubtype_")]
		public static int MFCreateVideoMediaTypeFromSubtype_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateVideoMediaTypeFromSubtype_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFIsFormatYUV_, [fwd] [return] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Mathematics_Interop_RawBool__SharpDX__SharpDX_Mathematics_Interop__RawBool__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFIsFormatYUV_")]
		public static global::SharpDX.Mathematics.Interop.RawBool__SharpDX MFIsFormatYUV_(int arg0)
		{
			// Setup
			global::SharpDX.Mathematics.Interop.RawBool__SharpDX unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFIsFormatYUV_(arg0);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateVideoMediaTypeFromBitMapInfoHeader_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateVideoMediaTypeFromBitMapInfoHeader_")]
		public static int MFCreateVideoMediaTypeFromBitMapInfoHeader_(
					void* arg0, 
					int arg1, 
					int arg2, 
					int arg3, 
					long arg4, 
					long arg5, 
					long arg6, 
					int arg7, 
					void* arg8)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateVideoMediaTypeFromBitMapInfoHeader_(
								((void*)arg0), 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								((void*)arg8)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetStrideForBitmapInfoHeader_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetStrideForBitmapInfoHeader_")]
		public static int MFGetStrideForBitmapInfoHeader_(
					int arg0, 
					int arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetStrideForBitmapInfoHeader_(
								arg0, 
								arg1, 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetPlaneSize_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetPlaneSize_")]
		public static int MFGetPlaneSize_(
					int arg0, 
					int arg1, 
					int arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetPlaneSize_(
								arg0, 
								arg1, 
								arg2, 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateVideoMediaTypeFromBitMapInfoHeaderEx_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateVideoMediaTypeFromBitMapInfoHeaderEx_")]
		public static int MFCreateVideoMediaTypeFromBitMapInfoHeaderEx_(
					void* arg0, 
					int arg1, 
					int arg2, 
					int arg3, 
					int arg4, 
					long arg5, 
					int arg6, 
					int arg7, 
					int arg8, 
					void* arg9)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateVideoMediaTypeFromBitMapInfoHeaderEx_(
								((void*)arg0), 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7, 
								arg8, 
								((void*)arg9)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMediaTypeFromRepresentation_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMediaTypeFromRepresentation_")]
		public static int MFCreateMediaTypeFromRepresentation_(
					global::System.Guid arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMediaTypeFromRepresentation_(
								arg0, 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateAudioMediaType_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateAudioMediaType_")]
		public static int MFCreateAudioMediaType_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateAudioMediaType_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetUncompressedVideoFormat_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetUncompressedVideoFormat_")]
		public static int MFGetUncompressedVideoFormat_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetUncompressedVideoFormat_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFInitVideoFormat_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFInitVideoFormat_")]
		public static int MFInitVideoFormat_(
					void* arg0, 
					int arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFInitVideoFormat_(
								((void*)arg0), 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFInitVideoFormat_RGB_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFInitVideoFormat_RGB_")]
		public static int MFInitVideoFormat_RGB_(
					void* arg0, 
					int arg1, 
					int arg2, 
					int arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFInitVideoFormat_RGB_(
								((void*)arg0), 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFConvertColorInfoToDXVA_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFConvertColorInfoToDXVA_")]
		public static int MFConvertColorInfoToDXVA_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFConvertColorInfoToDXVA_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFConvertColorInfoFromDXVA_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFConvertColorInfoFromDXVA_")]
		public static int MFConvertColorInfoFromDXVA_(
					void* arg0, 
					int arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFConvertColorInfoFromDXVA_(
								((void*)arg0), 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCopyImage_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCopyImage_")]
		public static int MFCopyImage_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					int arg5)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCopyImage_(
								((void*)arg0), 
								arg1, 
								((void*)arg2), 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFConvertFromFP16Array_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFConvertFromFP16Array_")]
		public static int MFConvertFromFP16Array_(
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFConvertFromFP16Array_(
								((void*)arg0), 
								((void*)arg1), 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFConvertToFP16Array_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFConvertToFP16Array_")]
		public static int MFConvertToFP16Array_(
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFConvertToFP16Array_(
								((void*)arg0), 
								((void*)arg1), 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreate2DMediaBuffer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Mathematics_Interop_RawBool__SharpDX__SharpDX_Mathematics_Interop__RawBool__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreate2DMediaBuffer_")]
		public static int MFCreate2DMediaBuffer_(
					int arg0, 
					int arg1, 
					int arg2, 
					global::SharpDX.Mathematics.Interop.RawBool__SharpDX arg3, 
					void* arg4)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreate2DMediaBuffer_(
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								((void*)arg4)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMediaBufferFromMediaType_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMediaBufferFromMediaType_")]
		public static int MFCreateMediaBufferFromMediaType_(
					void* arg0, 
					long arg1, 
					int arg2, 
					int arg3, 
					void* arg4)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMediaBufferFromMediaType_(
								((void*)arg0), 
								arg1, 
								arg2, 
								arg3, 
								((void*)arg4)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateCollection_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateCollection_")]
		public static int MFCreateCollection_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateCollection_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFHeapAlloc_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFHeapAlloc_")]
		public static global::System.IntPtr MFHeapAlloc_(
					int arg0, 
					int arg1, 
					void* arg2, 
					int arg3, 
					int arg4)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFHeapAlloc_(
								arg0, 
								arg1, 
								((void*)arg2), 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFHeapFree_, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFHeapFree_")]
		public static void MFHeapFree_(void* arg0)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.Mfplat_dll_PInvokes.MFHeapFree_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, MFllMulDiv_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFllMulDiv_")]
		public static long MFllMulDiv_(
					long arg0, 
					long arg1, 
					long arg2, 
					long arg3)
		{
			// Setup
			long unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFllMulDiv_(
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetContentProtectionSystemCLSID_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetContentProtectionSystemCLSID_")]
		public static int MFGetContentProtectionSystemCLSID_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetContentProtectionSystemCLSID_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSourceResolver_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSourceResolver_")]
		public static int MFCreateSourceResolver_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateSourceResolver_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetSystemTime_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetSystemTime_")]
		public static long MFGetSystemTime_()
		{
			// Setup
			long unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFGetSystemTime_();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSystemTimeSource_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSystemTimeSource_")]
		public static int MFCreateSystemTimeSource_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateSystemTimeSource_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreatePresentationDescriptor_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreatePresentationDescriptor_")]
		public static int MFCreatePresentationDescriptor_(
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreatePresentationDescriptor_(
								arg0, 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFSerializePresentationDescriptor_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFSerializePresentationDescriptor_")]
		public static int MFSerializePresentationDescriptor_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFSerializePresentationDescriptor_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFDeserializePresentationDescriptor_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFDeserializePresentationDescriptor_")]
		public static int MFDeserializePresentationDescriptor_(
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFDeserializePresentationDescriptor_(
								arg0, 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateStreamDescriptor_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateStreamDescriptor_")]
		public static int MFCreateStreamDescriptor_(
					int arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateStreamDescriptor_(
								arg0, 
								arg1, 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateAVIMediaSink_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateAVIMediaSink_")]
		public static int MFCreateAVIMediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateAVIMediaSink_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateWAVEMediaSink_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateWAVEMediaSink_")]
		public static int MFCreateWAVEMediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateWAVEMediaSink_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateTrackedSample_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateTrackedSample_")]
		public static int MFCreateTrackedSample_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateTrackedSample_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMFByteStreamOnStream_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMFByteStreamOnStream_")]
		public static int MFCreateMFByteStreamOnStream_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMFByteStreamOnStream_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateStreamOnMFByteStream_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateStreamOnMFByteStream_")]
		public static int MFCreateStreamOnMFByteStream_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateStreamOnMFByteStream_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMFByteStreamOnStreamEx_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMFByteStreamOnStreamEx_")]
		public static int MFCreateMFByteStreamOnStreamEx_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMFByteStreamOnStreamEx_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateStreamOnMFByteStreamEx_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateStreamOnMFByteStreamEx_")]
		public static int MFCreateStreamOnMFByteStreamEx_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateStreamOnMFByteStreamEx_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMediaTypeFromProperties_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMediaTypeFromProperties_")]
		public static int MFCreateMediaTypeFromProperties_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateMediaTypeFromProperties_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreatePropertiesFromMediaType_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreatePropertiesFromMediaType_")]
		public static int MFCreatePropertiesFromMediaType_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreatePropertiesFromMediaType_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateContentProtectionDevice_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateContentProtectionDevice_")]
		public static int MFCreateContentProtectionDevice_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateContentProtectionDevice_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFIsContentProtectionDeviceSupported_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFIsContentProtectionDeviceSupported_")]
		public static int MFIsContentProtectionDeviceSupported_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFIsContentProtectionDeviceSupported_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateContentDecryptorContext_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateContentDecryptorContext_")]
		public static int MFCreateContentDecryptorContext_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateContentDecryptorContext_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSensorGroup_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSensorGroup_")]
		public static int MFCreateSensorGroup_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateSensorGroup_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSensorStream_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSensorStream_")]
		public static int MFCreateSensorStream_(
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateSensorStream_(
								arg0, 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFSerializeAttributesToStream_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFSerializeAttributesToStream_")]
		public static int MFSerializeAttributesToStream_(
					void* arg0, 
					int arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFSerializeAttributesToStream_(
								((void*)arg0), 
								arg1, 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFDeserializeAttributesFromStream_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFDeserializeAttributesFromStream_")]
		public static int MFDeserializeAttributesFromStream_(
					void* arg0, 
					int arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFDeserializeAttributesFromStream_(
								((void*)arg0), 
								arg1, 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateTransformActivate_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateTransformActivate_")]
		public static int MFCreateTransformActivate_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfplat_dll_PInvokes.MFCreateTransformActivate_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'mf.dll'
	/// </summary>
	public unsafe static partial class mf_dll
	{
		// Signature, MFCreateVideoRenderer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateVideoRenderer_")]
		public static int MFCreateVideoRenderer_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateVideoRenderer_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateASFContentInfo_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateASFContentInfo_")]
		public static int MFCreateASFContentInfo_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateASFContentInfo_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateASFProfile_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateASFProfile_")]
		public static int MFCreateASFProfile_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateASFProfile_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateASFProfileFromPresentationDescriptor_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateASFProfileFromPresentationDescriptor_")]
		public static int MFCreateASFProfileFromPresentationDescriptor_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateASFProfileFromPresentationDescriptor_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreatePresentationDescriptorFromASFProfile_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreatePresentationDescriptorFromASFProfile_")]
		public static int MFCreatePresentationDescriptorFromASFProfile_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreatePresentationDescriptorFromASFProfile_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateASFSplitter_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateASFSplitter_")]
		public static int MFCreateASFSplitter_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateASFSplitter_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateASFMultiplexer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateASFMultiplexer_")]
		public static int MFCreateASFMultiplexer_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateASFMultiplexer_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateASFIndexer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateASFIndexer_")]
		public static int MFCreateASFIndexer_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateASFIndexer_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateASFIndexerByteStream_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateASFIndexerByteStream_")]
		public static int MFCreateASFIndexerByteStream_(
					void* arg0, 
					long arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateASFIndexerByteStream_(
								((void*)arg0), 
								arg1, 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateASFStreamSelector_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateASFStreamSelector_")]
		public static int MFCreateASFStreamSelector_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateASFStreamSelector_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateASFMediaSink_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateASFMediaSink_")]
		public static int MFCreateASFMediaSink_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateASFMediaSink_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateASFMediaSinkActivate_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateASFMediaSinkActivate_")]
		public static int MFCreateASFMediaSinkActivate_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateASFMediaSinkActivate_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateWMVEncoderActivate_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateWMVEncoderActivate_")]
		public static int MFCreateWMVEncoderActivate_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateWMVEncoderActivate_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateWMAEncoderActivate_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateWMAEncoderActivate_")]
		public static int MFCreateWMAEncoderActivate_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateWMAEncoderActivate_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateASFStreamingMediaSink_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateASFStreamingMediaSink_")]
		public static int MFCreateASFStreamingMediaSink_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateASFStreamingMediaSink_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateASFStreamingMediaSinkActivate_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateASFStreamingMediaSinkActivate_")]
		public static int MFCreateASFStreamingMediaSinkActivate_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateASFStreamingMediaSinkActivate_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMediaSession_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMediaSession_")]
		public static int MFCreateMediaSession_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateMediaSession_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreatePMPMediaSession_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreatePMPMediaSession_")]
		public static int MFCreatePMPMediaSession_(
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreatePMPMediaSession_(
								arg0, 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetSupportedSchemes_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetSupportedSchemes_")]
		public static int MFGetSupportedSchemes_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFGetSupportedSchemes_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetSupportedMimeTypes_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetSupportedMimeTypes_")]
		public static int MFGetSupportedMimeTypes_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFGetSupportedMimeTypes_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateTopology_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateTopology_")]
		public static int MFCreateTopology_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateTopology_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateTopologyNode_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateTopologyNode_")]
		public static int MFCreateTopologyNode_(
					int arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateTopologyNode_(
								arg0, 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetTopoNodeCurrentType_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Mathematics_Interop_RawBool__SharpDX__SharpDX_Mathematics_Interop__RawBool__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetTopoNodeCurrentType_")]
		public static int MFGetTopoNodeCurrentType_(
					void* arg0, 
					int arg1, 
					global::SharpDX.Mathematics.Interop.RawBool__SharpDX arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFGetTopoNodeCurrentType_(
								((void*)arg0), 
								arg1, 
								arg2, 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetService_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetService_")]
		public static int MFGetService_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFGetService_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreatePresentationClock_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreatePresentationClock_")]
		public static int MFCreatePresentationClock_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreatePresentationClock_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFRequireProtectedEnvironment_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFRequireProtectedEnvironment_")]
		public static int MFRequireProtectedEnvironment_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFRequireProtectedEnvironment_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSimpleTypeHandler_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSimpleTypeHandler_")]
		public static int MFCreateSimpleTypeHandler_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateSimpleTypeHandler_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFShutdownObject_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFShutdownObject_")]
		public static int MFShutdownObject_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFShutdownObject_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateAudioRenderer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateAudioRenderer_")]
		public static int MFCreateAudioRenderer_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateAudioRenderer_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateAudioRendererActivate_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateAudioRendererActivate_")]
		public static int MFCreateAudioRendererActivate_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateAudioRendererActivate_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateVideoRendererActivate_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateVideoRendererActivate_")]
		public static int MFCreateVideoRendererActivate_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateVideoRendererActivate_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMPEG4MediaSink_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMPEG4MediaSink_")]
		public static int MFCreateMPEG4MediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateMPEG4MediaSink_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreate3GPMediaSink_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreate3GPMediaSink_")]
		public static int MFCreate3GPMediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreate3GPMediaSink_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMP3MediaSink_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMP3MediaSink_")]
		public static int MFCreateMP3MediaSink_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateMP3MediaSink_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateAC3MediaSink_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateAC3MediaSink_")]
		public static int MFCreateAC3MediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateAC3MediaSink_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateADTSMediaSink_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateADTSMediaSink_")]
		public static int MFCreateADTSMediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateADTSMediaSink_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateMuxSink_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateMuxSink_")]
		public static int MFCreateMuxSink_(
					global::System.Guid arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateMuxSink_(
								arg0, 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateFMPEG4MediaSink_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateFMPEG4MediaSink_")]
		public static int MFCreateFMPEG4MediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateFMPEG4MediaSink_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateTopoLoader_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateTopoLoader_")]
		public static int MFCreateTopoLoader_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateTopoLoader_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSampleGrabberSinkActivate_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSampleGrabberSinkActivate_")]
		public static int MFCreateSampleGrabberSinkActivate_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateSampleGrabberSinkActivate_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateStandardQualityManager_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateStandardQualityManager_")]
		public static int MFCreateStandardQualityManager_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateStandardQualityManager_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSequencerSource_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSequencerSource_")]
		public static int MFCreateSequencerSource_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateSequencerSource_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSequencerSegmentOffset_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSequencerSegmentOffset_")]
		public static int MFCreateSequencerSegmentOffset_(
					int arg0, 
					long arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateSequencerSegmentOffset_(
								arg0, 
								arg1, 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateAggregateSource_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateAggregateSource_")]
		public static int MFCreateAggregateSource_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateAggregateSource_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateCredentialCache_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateCredentialCache_")]
		public static int MFCreateCredentialCache_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateCredentialCache_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateProxyLocator_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateProxyLocator_")]
		public static int MFCreateProxyLocator_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateProxyLocator_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateNetSchemePlugin_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateNetSchemePlugin_")]
		public static int MFCreateNetSchemePlugin_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateNetSchemePlugin_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreatePMPServer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreatePMPServer_")]
		public static int MFCreatePMPServer_(
					int arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreatePMPServer_(
								arg0, 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateRemoteDesktopPlugin_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateRemoteDesktopPlugin_")]
		public static int MFCreateRemoteDesktopPlugin_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateRemoteDesktopPlugin_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, CreateNamedPropertyStore_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "CreateNamedPropertyStore_")]
		public static int CreateNamedPropertyStore_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.CreateNamedPropertyStore_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSampleCopierMFT_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSampleCopierMFT_")]
		public static int MFCreateSampleCopierMFT_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateSampleCopierMFT_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateTranscodeProfile_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateTranscodeProfile_")]
		public static int MFCreateTranscodeProfile_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateTranscodeProfile_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateTranscodeTopology_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateTranscodeTopology_")]
		public static int MFCreateTranscodeTopology_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateTranscodeTopology_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateTranscodeTopologyFromByteStream_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateTranscodeTopologyFromByteStream_")]
		public static int MFCreateTranscodeTopologyFromByteStream_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateTranscodeTopologyFromByteStream_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFTranscodeGetAudioOutputAvailableTypes_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFTranscodeGetAudioOutputAvailableTypes_")]
		public static int MFTranscodeGetAudioOutputAvailableTypes_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFTranscodeGetAudioOutputAvailableTypes_(
								((void*)arg0), 
								arg1, 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateTranscodeSinkActivate_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateTranscodeSinkActivate_")]
		public static int MFCreateTranscodeSinkActivate_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateTranscodeSinkActivate_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFEnumDeviceSources_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFEnumDeviceSources_")]
		public static int MFEnumDeviceSources_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFEnumDeviceSources_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateDeviceSource_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateDeviceSource_")]
		public static int MFCreateDeviceSource_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateDeviceSource_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateDeviceSourceActivate_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateDeviceSourceActivate_")]
		public static int MFCreateDeviceSourceActivate_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateDeviceSourceActivate_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateProtectedEnvironmentAccess_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateProtectedEnvironmentAccess_")]
		public static int MFCreateProtectedEnvironmentAccess_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFCreateProtectedEnvironmentAccess_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFLoadSignedLibrary_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFLoadSignedLibrary_")]
		public static int MFLoadSignedLibrary_(
					void* arg0, 
					void* arg1)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFLoadSignedLibrary_(
								((void*)arg0), 
								((void*)arg1)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetSystemId_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetSystemId_")]
		public static int MFGetSystemId_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFGetSystemId_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFGetLocalId_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFGetLocalId_")]
		public static int MFGetLocalId_(
					void* arg0, 
					int arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mf_dll_PInvokes.MFGetLocalId_(
								((void*)arg0), 
								arg1, 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'mfplay.dll'
	/// </summary>
	public unsafe static partial class mfplay_dll
	{
		// Signature, MFPCreateMediaPlayer_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] SharpDX_Mathematics_Interop_RawBool__SharpDX__SharpDX_Mathematics_Interop__RawBool__SharpDX, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFPCreateMediaPlayer_")]
		public static int MFPCreateMediaPlayer_(
					void* arg0, 
					global::SharpDX.Mathematics.Interop.RawBool__SharpDX arg1, 
					int arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.mfplay_dll_PInvokes.MFPCreateMediaPlayer_(
								((void*)arg0), 
								arg1, 
								arg2, 
								((void*)arg3), 
								((void*)arg4), 
								((void*)arg5)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'Temp.dll'
	/// </summary>
	public unsafe static partial class Temp_dll
	{
		// Signature, CreatePropertyStore_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "CreatePropertyStore_")]
		public static int CreatePropertyStore_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Temp_dll_PInvokes.CreatePropertyStore_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'Mfreadwrite.dll'
	/// </summary>
	public unsafe static partial class Mfreadwrite_dll
	{
		// Signature, MFCreateSourceReaderFromURL_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSourceReaderFromURL_")]
		public static int MFCreateSourceReaderFromURL_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfreadwrite_dll_PInvokes.MFCreateSourceReaderFromURL_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSourceReaderFromByteStream_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSourceReaderFromByteStream_")]
		public static int MFCreateSourceReaderFromByteStream_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfreadwrite_dll_PInvokes.MFCreateSourceReaderFromByteStream_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSourceReaderFromMediaSource_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSourceReaderFromMediaSource_")]
		public static int MFCreateSourceReaderFromMediaSource_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfreadwrite_dll_PInvokes.MFCreateSourceReaderFromMediaSource_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSinkWriterFromURL_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSinkWriterFromURL_")]
		public static int MFCreateSinkWriterFromURL_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfreadwrite_dll_PInvokes.MFCreateSinkWriterFromURL_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								((void*)arg3)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, MFCreateSinkWriterFromMediaSink_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.MediaFoundation.MediaFactory", "MFCreateSinkWriterFromMediaSink_")]
		public static int MFCreateSinkWriterFromMediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.Mfreadwrite_dll_PInvokes.MFCreateSinkWriterFromMediaSink_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'xaudio2_8.dll'
	/// </summary>
	public unsafe static partial class xaudio2_8_dll
	{
		// Signature, CreateFX_28, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.XAudio2, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.XAPO.Fx.XAPOFx", "CreateFX_28")]
		public static int CreateFX_28(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					int arg3)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.xaudio2_8_dll_PInvokes.CreateFX_28(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, X3DAudioCalculate_, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.XAudio2, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.X3DAudio.X3DAudio28", "X3DAudioCalculate_")]
		public static void X3DAudioCalculate_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					int arg3, 
					void* arg4)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.xaudio2_8_dll_PInvokes.X3DAudioCalculate_(
								((void*)arg0), 
								((void*)arg1), 
								((void*)arg2), 
								arg3, 
								((void*)arg4)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, X3DAudioInitialize_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.XAudio2, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.X3DAudio.X3DAudio28", "X3DAudioInitialize_")]
		public static int X3DAudioInitialize_(
					int arg0, 
					float arg1, 
					void* arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.xaudio2_8_dll_PInvokes.X3DAudioInitialize_(
								arg0, 
								arg1, 
								((void*)arg2)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, XAudio2Create_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.XAudio2, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.XAudio2.XAudio28Functions", "XAudio2Create_")]
		public static int XAudio2Create_(
					void* arg0, 
					int arg1, 
					int arg2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.xaudio2_8_dll_PInvokes.XAudio2Create_(
								((void*)arg0), 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, CreateAudioReverb_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.XAudio2, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.XAudio2.XAudio28Functions", "CreateAudioReverb_")]
		public static int CreateAudioReverb_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.xaudio2_8_dll_PInvokes.CreateAudioReverb_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, CreateAudioVolumeMeter_, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SharpDX.XAudio2, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1", "SharpDX.XAudio2.XAudio28Functions", "CreateAudioVolumeMeter_")]
		public static int CreateAudioVolumeMeter_(void* arg0)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.xaudio2_8_dll_PInvokes.CreateAudioVolumeMeter_(((void*)arg0));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module '[MRT]'
	/// </summary>
	public unsafe static partial class _MRT_
	{
		// Signature, RhWaitForPendingFinalizers, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhWaitForPendingFinalizers")]
		public static void RhWaitForPendingFinalizers(int allowReentrantWait)
		{
			// Marshalling
			// Call to native method
			global::McgInterop._MRT__PInvokes.RhWaitForPendingFinalizers(allowReentrantWait);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, RhCompatibleReentrantWaitAny, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr___ptr__w64 int *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhCompatibleReentrantWaitAny")]
		public static int RhCompatibleReentrantWaitAny(
					int alertable, 
					int timeout, 
					int count, 
					global::System.IntPtr* handles)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop._MRT__PInvokes.RhCompatibleReentrantWaitAny(
								alertable, 
								timeout, 
								count, 
								((global::System.IntPtr*)handles)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, _ecvt_s, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int___ptrint *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int___ptrint *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "_ecvt_s")]
		public static void _ecvt_s(
					byte* buffer, 
					int sizeInBytes, 
					double value, 
					int count, 
					int* dec, 
					int* sign)
		{
			// Marshalling
			// Call to native method
			global::McgInterop._MRT__PInvokes._ecvt_s(
								((byte*)buffer), 
								sizeInBytes, 
								value, 
								count, 
								((int*)dec), 
								((int*)sign)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, memmove, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "memmove")]
		public static void memmove(
					byte* dmem, 
					byte* smem, 
					uint size)
		{
			// Marshalling
			// Call to native method
			global::McgInterop._MRT__PInvokes.memmove(
								((byte*)dmem), 
								((byte*)smem), 
								size
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module '*'
	/// </summary>
	public unsafe static partial class _
	{
		// Signature, CallingConventionConverter_GetStubs, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.TypeLoader, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.Runtime.TypeLoader.CallConverterThunk", "CallingConventionConverter_GetStubs")]
		public static void CallingConventionConverter_GetStubs(
					out global::System.IntPtr returnVoidStub, 
					out global::System.IntPtr returnIntegerStub, 
					out global::System.IntPtr commonStub, 
					out global::System.IntPtr returnFloatingPointReturn4Thunk, 
					out global::System.IntPtr returnFloatingPointReturn8Thunk)
		{
			// Setup
			global::System.IntPtr unsafe_returnVoidStub;
			global::System.IntPtr unsafe_returnIntegerStub;
			global::System.IntPtr unsafe_commonStub;
			global::System.IntPtr unsafe_returnFloatingPointReturn4Thunk;
			global::System.IntPtr unsafe_returnFloatingPointReturn8Thunk;
			// Marshalling
			// Call to native method
			global::McgInterop.__PInvokes.CallingConventionConverter_GetStubs(
								&(unsafe_returnVoidStub), 
								&(unsafe_returnIntegerStub), 
								&(unsafe_commonStub), 
								&(unsafe_returnFloatingPointReturn4Thunk), 
								&(unsafe_returnFloatingPointReturn8Thunk)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnFloatingPointReturn8Thunk = unsafe_returnFloatingPointReturn8Thunk;
			returnFloatingPointReturn4Thunk = unsafe_returnFloatingPointReturn4Thunk;
			commonStub = unsafe_commonStub;
			returnIntegerStub = unsafe_returnIntegerStub;
			returnVoidStub = unsafe_returnVoidStub;
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-errorhandling-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_errorhandling_l1_1_0_dll
	{
		// Signature, GetLastError, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Runtime.Extensions, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+mincore", "GetLastError")]
		public static int GetLastError()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes.GetLastError();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_l1_1_0_dll
	{
		// Signature, RoInitialize, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "RoInitialize")]
		public static int RoInitialize(uint initType)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.api_ms_win_core_winrt_l1_1_0_dll_PInvokes.RoInitialize(initType);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-localization-l1-2-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_localization_l1_2_0_dll
	{
		// Signature, IsValidLocaleName, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] char___ptrwchar_t *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "IsValidLocaleName")]
		public static int IsValidLocaleName(char* lpLocaleName)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.IsValidLocaleName(((ushort*)lpLocaleName));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, ResolveLocaleName, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] char___ptrwchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] char___ptrwchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "ResolveLocaleName")]
		public static int ResolveLocaleName(
					char* lpNameToResolve, 
					char* lpLocaleName, 
					int cchLocaleName)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.ResolveLocaleName(
								((ushort*)lpNameToResolve), 
								((ushort*)lpLocaleName), 
								cchLocaleName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, GetCPInfoExW, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Interop_mincore_CPINFOEXW__System_Text_Encoding_CodePages___ptr__Interop_mincore_CPINFOEXW__System_Text_Encoding_CodePages *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Text.Encoding.CodePages, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+mincore", "GetCPInfoExW")]
		public static int GetCPInfoExW(
					uint CodePage, 
					uint dwFlags, 
					global::Interop_mincore_CPINFOEXW__System_Text_Encoding_CodePages* lpCPInfoEx)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.GetCPInfoExW(
								CodePage, 
								dwFlags, 
								((global::Interop_mincore_CPINFOEXW__System_Text_Encoding_CodePages*)lpCPInfoEx)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-com-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_com_l1_1_0_dll
	{
		// Signature, CoCreateInstance, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.StackTraceGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.StackTraceGenerator.StackTraceGenerator", "CoCreateInstance")]
		public static int CoCreateInstance(
					byte* rclsid, 
					global::System.IntPtr pUnkOuter, 
					int dwClsContext, 
					byte* riid, 
					out global::System.IntPtr ppv)
		{
			// Setup
			global::System.IntPtr unsafe_ppv;
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.api_ms_win_core_com_l1_1_0_dll_PInvokes.CoCreateInstance(
								((byte*)rclsid), 
								pUnkOuter, 
								dwClsContext, 
								((byte*)riid), 
								&(unsafe_ppv)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppv = unsafe_ppv;
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'OleAut32'
	/// </summary>
	public unsafe static partial class OleAut32
	{
		// Signature, SysFreeString, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.StackTraceGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.LightweightInterop.MarshalExtensions", "SysFreeString")]
		public static void SysFreeString(global::System.IntPtr bstr)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.OleAut32_PInvokes.SysFreeString(bstr);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-robuffer-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_robuffer_l1_1_0_dll
	{
		// Signature, RoGetBufferMarshaler, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_IMarshal__System_Runtime_WindowsRuntime__System_Runtime_InteropServices__IMarshal__System_Runtime_WindowsRuntime *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Runtime.WindowsRuntime, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "Interop+mincore_PInvokes", "RoGetBufferMarshaler")]
		public static int RoGetBufferMarshaler(out global::System.Runtime.InteropServices.IMarshal__System_Runtime_WindowsRuntime bufferMarshalerPtr)
		{
			// Setup
			global::System.Runtime.InteropServices.IMarshal__System_Runtime_WindowsRuntime__Impl.Vtbl** unsafe_bufferMarshalerPtr = default(global::System.Runtime.InteropServices.IMarshal__System_Runtime_WindowsRuntime__Impl.Vtbl**);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_bufferMarshalerPtr = null;
				// Call to native method
				unsafe___value = global::McgInterop.api_ms_win_core_winrt_robuffer_l1_1_0_dll_PInvokes.RoGetBufferMarshaler(&(unsafe_bufferMarshalerPtr));
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bufferMarshalerPtr = (global::System.Runtime.InteropServices.IMarshal__System_Runtime_WindowsRuntime)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bufferMarshalerPtr), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.IMarshal,System.Runtime.WindowsRuntime, Version=4.0.10.0, Culture=neutral, Public" +
											"KeyToken=b77a5c561934e089")
								);
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bufferMarshalerPtr)));
			}
		}
	}

	public unsafe static partial class dwrite_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("dwrite.dll", EntryPoint="DWriteCreateFactory", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int DWriteCreateFactory_(
					int arg0, 
					void* arg1, 
					void* arg2);
	}

	public unsafe static partial class d2d1_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#1", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int D2D1CreateFactory_(
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#2", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static void D2D1MakeRotateMatrix_(
					float arg0, 
					global::SharpDX.Mathematics.Interop.RawVector2__SharpDX arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static void D2D1MakeSkewMatrix_(
					float arg0, 
					float arg1, 
					global::SharpDX.Mathematics.Interop.RawVector2__SharpDX arg2, 
					void* arg3);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#4", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static global::SharpDX.Mathematics.Interop.RawBool__SharpDX D2D1IsMatrixInvertible_(void* arg0);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#5", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static global::SharpDX.Mathematics.Interop.RawBool__SharpDX D2D1InvertMatrix_(void* arg0);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#7", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int D2D1CreateDevice_(
					void* arg0, 
					void* arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#8", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int D2D1CreateDeviceContext_(
					void* arg0, 
					void* arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#6", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static void* D2D1ConvertColorSpace_(
					void* arg0, 
					int arg1, 
					int arg2, 
					void* arg3);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#9", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static void D2D1SinCos_(
					float arg0, 
					void* arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#10", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static float D2D1Tan_(float arg0);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#11", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static float D2D1Vec3Length_(
					float arg0, 
					float arg1, 
					float arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#12", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static float D2D1ComputeMaximumScaleFactor_(void* arg0);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d2d1.dll", EntryPoint="#13", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static void D2D1GetGradientMeshInteriorPointsFromCoonsPatch_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5, 
					void* arg6, 
					void* arg7, 
					void* arg8, 
					void* arg9, 
					void* arg10, 
					void* arg11, 
					void* arg12, 
					void* arg13, 
					void* arg14, 
					void* arg15);
	}

	public unsafe static partial class d3d11_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d3d11.dll", EntryPoint="D3D11CreateDevice", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int D3D11CreateDevice_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					int arg3, 
					void* arg4, 
					int arg5, 
					int arg6, 
					void* arg7, 
					void* arg8, 
					void* arg9);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("d3d11.dll", EntryPoint="D3D11On12CreateDevice", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int D3D11On12CreateDevice_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					int arg3, 
					void* arg4, 
					int arg5, 
					int arg6, 
					void* arg7, 
					void* arg8, 
					void* arg9);
	}

	public unsafe static partial class kernel32_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-1.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static uint FormatMessageW(
					int dwFlags, 
					global::System.IntPtr lpSource, 
					int dwMessageId, 
					int dwLanguageId, 
					global::System.IntPtr* lpBuffer, 
					int nSize, 
					global::System.IntPtr Arguments);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-handle-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int CloseHandle(global::System.IntPtr handle);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-file-l1-2-1.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int ReadFile(
					global::System.IntPtr fileHandle, 
					global::System.IntPtr buffer, 
					int numberOfBytesToRead, 
					int* numberOfBytesRead, 
					global::System.IntPtr overlapped);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-file-l1-2-1.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int FlushFileBuffers(global::System.IntPtr hFile);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-file-l1-2-1.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int WriteFile(
					global::System.IntPtr fileHandle, 
					global::System.IntPtr buffer, 
					int numberOfBytesToRead, 
					int* numberOfBytesRead, 
					global::System.IntPtr overlapped);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-file-l1-2-1.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int SetFilePointerEx(
					global::System.IntPtr handle, 
					long distanceToMove, 
					long* distanceToMoveHigh, 
					global::System.IO.SeekOrigin__System_IO seekOrigin);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-file-l1-2-1.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int SetEndOfFile(global::System.IntPtr handle);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-file-l1-2-1.dll", EntryPoint="GetFileAttributesExW", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetFileAttributesEx(
					ushort* name, 
					int fileInfoLevel, 
					global::SharpDX.IO.NativeFile_WIN32_FILE_ATTRIBUTE_DATA__SharpDX* lpFileInformation);

		public static global::System.IntPtr Create(
					ushort* fileName, 
					global::SharpDX.IO.NativeFileAccess__SharpDX desiredAccess, 
					global::SharpDX.IO.NativeFileShare__SharpDX shareMode, 
					global::System.IntPtr securityAttributes, 
					global::SharpDX.IO.NativeFileMode__SharpDX mode, 
					global::SharpDX.IO.NativeFileOptions__SharpDX flagsAndOptions, 
					global::System.IntPtr templateFile)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'Create!kernel32.dll' in assembly 'SharpDX, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-file-l1-2-1.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetFileSizeEx(
					global::System.IntPtr handle, 
					long* fileSize);
	}

	public unsafe static partial class ole32_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("ole32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static global::SharpDX.Result__SharpDX CoCreateInstance(
					global::System.Guid* rclsid, 
					global::System.IntPtr pUnkOuter, 
					global::SharpDX.Utilities_CLSCTX__SharpDX dwClsContext, 
					global::System.Guid* riid, 
					global::System.IntPtr* comObject);
	}

	public unsafe static partial class kernel32_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-libraryloader-l1-2-0.dll", EntryPoint="GetProcAddress", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static global::System.IntPtr GetProcAddress_(
					global::System.IntPtr hModule, 
					byte* procName);
	}

	public unsafe static partial class dxgi_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("dxgi.dll", EntryPoint="CreateDXGIFactory1", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int CreateDXGIFactory1_(
					void* arg0, 
					void* arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("dxgi.dll", EntryPoint="CreateDXGIFactory2", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int CreateDXGIFactory2_(
					int arg0, 
					void* arg1, 
					void* arg2);
	}

	public unsafe static partial class Mfplat_dll_PInvokes
	{
		public static int MFCreateVideoPresenter_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateVideoPresenter_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateVideoMixer_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateVideoMixer_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateVideoMixerAndPresenter_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateVideoMixerAndPresenter_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateVideoSampleFromSurface_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateVideoSampleFromSurface_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateVideoSampleAllocator_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateVideoSampleAllocator_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFStartup", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFStartup_(
					int arg0, 
					int arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFShutdown", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFShutdown_();

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFLockPlatform", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFLockPlatform_();

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFUnlockPlatform", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFUnlockPlatform_();

		public static int MFPutWorkItem_(
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFPutWorkItem_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFPutWorkItem2", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFPutWorkItem2_(
					int arg0, 
					int arg1, 
					void* arg2, 
					void* arg3);

		public static int MFPutWorkItemEx_(
					int arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFPutWorkItemEx_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFPutWorkItemEx2", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFPutWorkItemEx2_(
					int arg0, 
					int arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFPutWaitingWorkItem", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFPutWaitingWorkItem_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFAllocateSerialWorkQueue", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFAllocateSerialWorkQueue_(
					int arg0, 
					void* arg1);

		public static int MFScheduleWorkItemEx_(
					void* arg0, 
					long arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFScheduleWorkItemEx_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFScheduleWorkItem_(
					void* arg0, 
					void* arg1, 
					long arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFScheduleWorkItem_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCancelWorkItem", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCancelWorkItem_(long arg0);

		public static int MFGetTimerPeriodicity_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetTimerPeriodicity_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFAddPeriodicCallback_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFAddPeriodicCallback_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFRemovePeriodicCallback_(int arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFRemovePeriodicCallback_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFAllocateWorkQueueEx_(
					int arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFAllocateWorkQueueEx_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFAllocateWorkQueue_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFAllocateWorkQueue_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFLockWorkQueue", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFLockWorkQueue_(int arg0);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFUnlockWorkQueue", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFUnlockWorkQueue_(int arg0);

		public static int MFBeginRegisterWorkQueueWithMMCSS_(
					int arg0, 
					void* arg1, 
					int arg2, 
					void* arg3, 
					void* arg4)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFBeginRegisterWorkQueueWithMMCSS_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFBeginRegisterWorkQueueWithMMCSSEx_(
					int arg0, 
					void* arg1, 
					int arg2, 
					int arg3, 
					void* arg4, 
					void* arg5)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFBeginRegisterWorkQueueWithMMCSSEx_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFEndRegisterWorkQueueWithMMCSS_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFEndRegisterWorkQueueWithMMCSS_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFBeginUnregisterWorkQueueWithMMCSS_(
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFBeginUnregisterWorkQueueWithMMCSS_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFEndUnregisterWorkQueueWithMMCSS_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFEndUnregisterWorkQueueWithMMCSS_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFGetWorkQueueMMCSSClass_(
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetWorkQueueMMCSSClass_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFGetWorkQueueMMCSSTaskId_(
					int arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetWorkQueueMMCSSTaskId_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFRegisterPlatformWithMMCSS_(
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFRegisterPlatformWithMMCSS_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFUnregisterPlatformFromMMCSS_()
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFUnregisterPlatformFromMMCSS_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFLockSharedWorkQueue", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFLockSharedWorkQueue_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3);

		public static int MFGetWorkQueueMMCSSPriority_(
					int arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetWorkQueueMMCSSPriority_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateAsyncResult", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateAsyncResult_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFInvokeCallback", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFInvokeCallback_(void* arg0);

		public static int MFCreateFile_(
					int arg0, 
					int arg1, 
					int arg2, 
					void* arg3, 
					void* arg4)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateFile_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateTempFile_(
					int arg0, 
					int arg1, 
					int arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateTempFile_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFBeginCreateFile_(
					int arg0, 
					int arg1, 
					int arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5, 
					void* arg6)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFBeginCreateFile_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFEndCreateFile_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFEndCreateFile_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCancelCreateFile_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCancelCreateFile_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateMemoryBuffer", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateMemoryBuffer_(
					int arg0, 
					void* arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateMediaBufferWrapper", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateMediaBufferWrapper_(
					void* arg0, 
					int arg1, 
					int arg2, 
					void* arg3);

		public static int MFCreateLegacyMediaBufferOnMFMediaBuffer_(
					void* arg0, 
					void* arg1, 
					int arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateLegacyMediaBufferOnMFMediaBuffer_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static global::SharpDX.DXGI.Format__SharpDX_DXGI MFMapDX9FormatToDXGIFormat_(int arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFMapDX9FormatToDXGIFormat_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFMapDXGIFormatToDX9Format_(int arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFMapDXGIFormatToDX9Format_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFLockDXGIDeviceManager", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFLockDXGIDeviceManager_(
					void* arg0, 
					void* arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFUnlockDXGIDeviceManager", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFUnlockDXGIDeviceManager_();

		public static int MFCreateDXSurfaceBuffer_(
					void* arg0, 
					void* arg1, 
					global::SharpDX.Mathematics.Interop.RawBool__SharpDX arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateDXSurfaceBuffer_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateWICBitmapBuffer_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateWICBitmapBuffer_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateDXGISurfaceBuffer", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateDXGISurfaceBuffer_(
					void* arg0, 
					void* arg1, 
					int arg2, 
					global::SharpDX.Mathematics.Interop.RawBool__SharpDX arg3, 
					void* arg4);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateVideoSampleAllocatorEx", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateVideoSampleAllocatorEx_(
					void* arg0, 
					void* arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateDXGIDeviceManager", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateDXGIDeviceManager_(
					void* arg0, 
					void* arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateAlignedMemoryBuffer", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateAlignedMemoryBuffer_(
					int arg0, 
					int arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateMediaEvent", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateMediaEvent_(
					int arg0, 
					void* arg1, 
					global::SharpDX.Result__SharpDX arg2, 
					void* arg3, 
					void* arg4);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateEventQueue", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateEventQueue_(void* arg0);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateSample", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateSample_(void* arg0);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateAttributes", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateAttributes_(
					void* arg0, 
					int arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFInitAttributesFromBlob", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFInitAttributesFromBlob_(
					void* arg0, 
					void* arg1, 
					int arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFGetAttributesAsBlobSize", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFGetAttributesAsBlobSize_(
					void* arg0, 
					void* arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFGetAttributesAsBlob", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFGetAttributesAsBlob_(
					void* arg0, 
					void* arg1, 
					int arg2);

		public static int MFTRegister_(
					global::System.Guid arg0, 
					global::System.Guid arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					void* arg5, 
					int arg6, 
					void* arg7, 
					void* arg8)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFTRegister_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFTUnregister_(global::System.Guid arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFTUnregister_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFTRegisterLocal_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					void* arg5, 
					int arg6, 
					void* arg7)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFTRegisterLocal_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFTUnregisterLocal_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFTUnregisterLocal_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFTRegisterLocalByCLSID_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					void* arg5, 
					int arg6, 
					void* arg7)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFTRegisterLocalByCLSID_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFTUnregisterLocalByCLSID_(global::System.Guid arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFTUnregisterLocalByCLSID_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFTEnum_(
					global::System.Guid arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5, 
					void* arg6)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFTEnum_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFTEnumEx_(
					global::System.Guid arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFTEnumEx_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFTEnum2_(
					global::System.Guid arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5, 
					void* arg6)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFTEnum2_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFTGetInfo_(
					global::System.Guid arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5, 
					void* arg6)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFTGetInfo_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFGetPluginControl_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetPluginControl_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFGetMFTMerit_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetMFTMerit_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFRegisterLocalSchemeHandler_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFRegisterLocalSchemeHandler_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFRegisterLocalByteStreamHandler_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFRegisterLocalByteStreamHandler_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateMFByteStreamWrapper_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateMFByteStreamWrapper_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateMediaExtensionActivate", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateMediaExtensionActivate_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3);

		public static int MFCreateMuxStreamAttributes_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateMuxStreamAttributes_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateMuxStreamMediaType_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateMuxStreamMediaType_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateMuxStreamSample_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateMuxStreamSample_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFValidateMediaTypeSize_(
					global::System.Guid arg0, 
					void* arg1, 
					int arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFValidateMediaTypeSize_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateMediaType", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateMediaType_(void* arg0);

		public static int MFCreateMFVideoFormatFromMFMediaType_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateMFVideoFormatFromMFMediaType_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateWaveFormatExFromMFMediaType", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateWaveFormatExFromMFMediaType_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					int arg3);

		public static int MFCalculateBitmapImageSize_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCalculateBitmapImageSize_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCalculateImageSize_(
					void* arg0, 
					int arg1, 
					int arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCalculateImageSize_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFFrameRateToAverageTimePerFrame_(
					int arg0, 
					int arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFFrameRateToAverageTimePerFrame_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFAverageTimePerFrameToFrameRate_(
					long arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFAverageTimePerFrameToFrameRate_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFInitMediaTypeFromMFVideoFormat_(
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFInitMediaTypeFromMFVideoFormat_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFInitMediaTypeFromWaveFormatEx", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFInitMediaTypeFromWaveFormatEx_(
					void* arg0, 
					void* arg1, 
					int arg2);

		public static global::SharpDX.Mathematics.Interop.RawBool__SharpDX MFCompareFullToPartialMediaType_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCompareFullToPartialMediaType_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFWrapMediaType", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFWrapMediaType_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFUnwrapMediaType", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFUnwrapMediaType_(
					void* arg0, 
					void* arg1);

		public static int MFCreateVideoMediaType_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateVideoMediaType_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateVideoMediaTypeFromSubtype_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateVideoMediaTypeFromSubtype_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static global::SharpDX.Mathematics.Interop.RawBool__SharpDX MFIsFormatYUV_(int arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFIsFormatYUV_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateVideoMediaTypeFromBitMapInfoHeader_(
					void* arg0, 
					int arg1, 
					int arg2, 
					int arg3, 
					long arg4, 
					long arg5, 
					long arg6, 
					int arg7, 
					void* arg8)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateVideoMediaTypeFromBitMapInfoHeader_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFGetStrideForBitmapInfoHeader_(
					int arg0, 
					int arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetStrideForBitmapInfoHeader_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFGetPlaneSize_(
					int arg0, 
					int arg1, 
					int arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetPlaneSize_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateVideoMediaTypeFromBitMapInfoHeaderEx_(
					void* arg0, 
					int arg1, 
					int arg2, 
					int arg3, 
					int arg4, 
					long arg5, 
					int arg6, 
					int arg7, 
					int arg8, 
					void* arg9)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateVideoMediaTypeFromBitMapInfoHeaderEx_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateMediaTypeFromRepresentation_(
					global::System.Guid arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateMediaTypeFromRepresentation_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateAudioMediaType_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateAudioMediaType_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFGetUncompressedVideoFormat_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetUncompressedVideoFormat_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFInitVideoFormat_(
					void* arg0, 
					int arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFInitVideoFormat_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFInitVideoFormat_RGB_(
					void* arg0, 
					int arg1, 
					int arg2, 
					int arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFInitVideoFormat_RGB_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFConvertColorInfoToDXVA_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFConvertColorInfoToDXVA_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFConvertColorInfoFromDXVA_(
					void* arg0, 
					int arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFConvertColorInfoFromDXVA_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCopyImage", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCopyImage_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					int arg5);

		public static int MFConvertFromFP16Array_(
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFConvertFromFP16Array_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFConvertToFP16Array_(
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFConvertToFP16Array_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreate2DMediaBuffer", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreate2DMediaBuffer_(
					int arg0, 
					int arg1, 
					int arg2, 
					global::SharpDX.Mathematics.Interop.RawBool__SharpDX arg3, 
					void* arg4);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateMediaBufferFromMediaType", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateMediaBufferFromMediaType_(
					void* arg0, 
					long arg1, 
					int arg2, 
					int arg3, 
					void* arg4);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateCollection", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateCollection_(void* arg0);

		public static global::System.IntPtr MFHeapAlloc_(
					int arg0, 
					int arg1, 
					void* arg2, 
					int arg3, 
					int arg4)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFHeapAlloc_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static void MFHeapFree_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFHeapFree_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFllMulDiv", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static long MFllMulDiv_(
					long arg0, 
					long arg1, 
					long arg2, 
					long arg3);

		public static int MFGetContentProtectionSystemCLSID_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetContentProtectionSystemCLSID_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateSourceResolver", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateSourceResolver_(void* arg0);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFGetSystemTime", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static long MFGetSystemTime_();

		public static int MFCreateSystemTimeSource_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateSystemTimeSource_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreatePresentationDescriptor", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreatePresentationDescriptor_(
					int arg0, 
					void* arg1, 
					void* arg2);

		public static int MFSerializePresentationDescriptor_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFSerializePresentationDescriptor_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFDeserializePresentationDescriptor_(
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFDeserializePresentationDescriptor_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateStreamDescriptor", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateStreamDescriptor_(
					int arg0, 
					int arg1, 
					void* arg2, 
					void* arg3);

		public static int MFCreateAVIMediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateAVIMediaSink_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateWAVEMediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateWAVEMediaSink_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateTrackedSample", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateTrackedSample_(void* arg0);

		public static int MFCreateMFByteStreamOnStream_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateMFByteStreamOnStream_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateStreamOnMFByteStream_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateStreamOnMFByteStream_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateMFByteStreamOnStreamEx", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateMFByteStreamOnStreamEx_(
					void* arg0, 
					void* arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateStreamOnMFByteStreamEx", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateStreamOnMFByteStreamEx_(
					void* arg0, 
					void* arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateMediaTypeFromProperties", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateMediaTypeFromProperties_(
					void* arg0, 
					void* arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreatePropertiesFromMediaType", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreatePropertiesFromMediaType_(
					void* arg0, 
					void* arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateContentProtectionDevice", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateContentProtectionDevice_(
					void* arg0, 
					void* arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFIsContentProtectionDeviceSupported", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFIsContentProtectionDeviceSupported_(
					void* arg0, 
					void* arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFCreateContentDecryptorContext", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateContentDecryptorContext_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3);

		public static int MFCreateSensorGroup_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateSensorGroup_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateSensorStream_(
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateSensorStream_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFSerializeAttributesToStream", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFSerializeAttributesToStream_(
					void* arg0, 
					int arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfplat.dll", EntryPoint="MFDeserializeAttributesFromStream", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFDeserializeAttributesFromStream_(
					void* arg0, 
					int arg1, 
					void* arg2);

		public static int MFCreateTransformActivate_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateTransformActivate_!Mfplat.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}
	}

	public unsafe static partial class mf_dll_PInvokes
	{
		public static int MFCreateVideoRenderer_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateVideoRenderer_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateASFContentInfo_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateASFContentInfo_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateASFProfile_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateASFProfile_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateASFProfileFromPresentationDescriptor_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateASFProfileFromPresentationDescriptor_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreatePresentationDescriptorFromASFProfile_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreatePresentationDescriptorFromASFProfile_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateASFSplitter_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateASFSplitter_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateASFMultiplexer_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateASFMultiplexer_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateASFIndexer_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateASFIndexer_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateASFIndexerByteStream_(
					void* arg0, 
					long arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateASFIndexerByteStream_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateASFStreamSelector_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateASFStreamSelector_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateASFMediaSink_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateASFMediaSink_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateASFMediaSinkActivate_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateASFMediaSinkActivate_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateWMVEncoderActivate_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateWMVEncoderActivate_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateWMAEncoderActivate_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateWMAEncoderActivate_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateASFStreamingMediaSink_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateASFStreamingMediaSink_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateASFStreamingMediaSinkActivate_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateASFStreamingMediaSinkActivate_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateMediaSession_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateMediaSession_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreatePMPMediaSession_(
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreatePMPMediaSession_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFGetSupportedSchemes_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetSupportedSchemes_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFGetSupportedMimeTypes_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetSupportedMimeTypes_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateTopology_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateTopology_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateTopologyNode_(
					int arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateTopologyNode_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFGetTopoNodeCurrentType_(
					void* arg0, 
					int arg1, 
					global::SharpDX.Mathematics.Interop.RawBool__SharpDX arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFGetTopoNodeCurrentType_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mf.dll", EntryPoint="MFGetService", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFGetService_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3);

		public static int MFCreatePresentationClock_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreatePresentationClock_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFRequireProtectedEnvironment_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFRequireProtectedEnvironment_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateSimpleTypeHandler_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateSimpleTypeHandler_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFShutdownObject_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFShutdownObject_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateAudioRenderer_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateAudioRenderer_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateAudioRendererActivate_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateAudioRendererActivate_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateVideoRendererActivate_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateVideoRendererActivate_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateMPEG4MediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateMPEG4MediaSink_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreate3GPMediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreate3GPMediaSink_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateMP3MediaSink_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateMP3MediaSink_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateAC3MediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateAC3MediaSink_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateADTSMediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateADTSMediaSink_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateMuxSink_(
					global::System.Guid arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateMuxSink_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateFMPEG4MediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateFMPEG4MediaSink_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateTopoLoader_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateTopoLoader_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateSampleGrabberSinkActivate_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateSampleGrabberSinkActivate_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateStandardQualityManager_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateStandardQualityManager_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateSequencerSource_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateSequencerSource_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateSequencerSegmentOffset_(
					int arg0, 
					long arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateSequencerSegmentOffset_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mf.dll", EntryPoint="MFCreateAggregateSource", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateAggregateSource_(
					void* arg0, 
					void* arg1);

		public static int MFCreateCredentialCache_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateCredentialCache_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateProxyLocator_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateProxyLocator_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateNetSchemePlugin_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateNetSchemePlugin_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreatePMPServer_(
					int arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreatePMPServer_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateRemoteDesktopPlugin_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateRemoteDesktopPlugin_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int CreateNamedPropertyStore_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'CreateNamedPropertyStore_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateSampleCopierMFT_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateSampleCopierMFT_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateTranscodeProfile_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateTranscodeProfile_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateTranscodeTopology_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateTranscodeTopology_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateTranscodeTopologyFromByteStream_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateTranscodeTopologyFromByteStream_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFTranscodeGetAudioOutputAvailableTypes_(
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFTranscodeGetAudioOutputAvailableTypes_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateTranscodeSinkActivate_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateTranscodeSinkActivate_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFEnumDeviceSources_(
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFEnumDeviceSources_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateDeviceSource_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateDeviceSource_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		public static int MFCreateDeviceSourceActivate_(
					void* arg0, 
					void* arg1)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFCreateDeviceSourceActivate_!mf.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mf.dll", EntryPoint="MFCreateProtectedEnvironmentAccess", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateProtectedEnvironmentAccess_(void* arg0);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mf.dll", EntryPoint="MFLoadSignedLibrary", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFLoadSignedLibrary_(
					void* arg0, 
					void* arg1);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mf.dll", EntryPoint="MFGetSystemId", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFGetSystemId_(void* arg0);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mf.dll", EntryPoint="MFGetLocalId", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFGetLocalId_(
					void* arg0, 
					int arg1, 
					void* arg2);
	}

	public unsafe static partial class mfplay_dll_PInvokes
	{
		public static int MFPCreateMediaPlayer_(
					void* arg0, 
					global::SharpDX.Mathematics.Interop.RawBool__SharpDX arg1, 
					int arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'MFPCreateMediaPlayer_!mfplay.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}
	}

	public unsafe static partial class Temp_dll_PInvokes
	{
		public static int CreatePropertyStore_(void* arg0)
		{
			throw new global::System.TypeLoadException(@"Unresolved P/Invoke method 'CreatePropertyStore_!Temp.dll' in assembly 'SharpDX.MediaFoundation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1' because it is not available in UWP applications. Please either use an another API , or use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP application APIs.");
		}
	}

	public unsafe static partial class Mfreadwrite_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfreadwrite.dll", EntryPoint="MFCreateSourceReaderFromURL", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateSourceReaderFromURL_(
					void* arg0, 
					void* arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfreadwrite.dll", EntryPoint="MFCreateSourceReaderFromByteStream", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateSourceReaderFromByteStream_(
					void* arg0, 
					void* arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfreadwrite.dll", EntryPoint="MFCreateSourceReaderFromMediaSource", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateSourceReaderFromMediaSource_(
					void* arg0, 
					void* arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfreadwrite.dll", EntryPoint="MFCreateSinkWriterFromURL", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateSinkWriterFromURL_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("mfreadwrite.dll", EntryPoint="MFCreateSinkWriterFromMediaSink", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int MFCreateSinkWriterFromMediaSink_(
					void* arg0, 
					void* arg1, 
					void* arg2);
	}

	public unsafe static partial class xaudio2_8_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("xaudio2_9.dll", EntryPoint="#4", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int CreateFX_28(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					int arg3);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("xaudio2_9.dll", EntryPoint="#5", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void X3DAudioCalculate_(
					void* arg0, 
					void* arg1, 
					void* arg2, 
					int arg3, 
					void* arg4);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("xaudio2_9.dll", EntryPoint="#6", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int X3DAudioInitialize_(
					int arg0, 
					float arg1, 
					void* arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("xaudio2_9.dll", EntryPoint="#1", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int XAudio2Create_(
					void* arg0, 
					int arg1, 
					int arg2);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("xaudio2_9.dll", EntryPoint="#2", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int CreateAudioReverb_(void* arg0);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("xaudio2_9.dll", EntryPoint="#3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int CreateAudioVolumeMeter_(void* arg0);
	}

	public unsafe static partial class _MRT__PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void RhWaitForPendingFinalizers(int allowReentrantWait);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int RhCompatibleReentrantWaitAny(
					int alertable, 
					int timeout, 
					int count, 
					global::System.IntPtr* handles);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void _ecvt_s(
					byte* buffer, 
					int sizeInBytes, 
					double value, 
					int count, 
					int* dec, 
					int* sign);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void memmove(
					byte* dmem, 
					byte* smem, 
					uint size);
	}

	public unsafe static partial class __PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("*", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void CallingConventionConverter_GetStubs(
					global::System.IntPtr* returnVoidStub, 
					global::System.IntPtr* returnIntegerStub, 
					global::System.IntPtr* commonStub, 
					global::System.IntPtr* returnFloatingPointReturn4Thunk, 
					global::System.IntPtr* returnFloatingPointReturn8Thunk);
	}

	public unsafe static partial class api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-errorhandling-l1-1-1.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetLastError();
	}

	public unsafe static partial class api_ms_win_core_winrt_l1_1_0_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int RoInitialize(uint initType);
	}

	public unsafe static partial class api_ms_win_core_localization_l1_2_0_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-1.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int IsValidLocaleName(ushort* lpLocaleName);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-1.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int ResolveLocaleName(
					ushort* lpNameToResolve, 
					ushort* lpLocaleName, 
					int cchLocaleName);

		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-1.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetCPInfoExW(
					uint CodePage, 
					uint dwFlags, 
					global::Interop_mincore_CPINFOEXW__System_Text_Encoding_CodePages* lpCPInfoEx);
	}

	public unsafe static partial class api_ms_win_core_com_l1_1_0_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-com-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int CoCreateInstance(
					byte* rclsid, 
					global::System.IntPtr pUnkOuter, 
					int dwClsContext, 
					byte* riid, 
					global::System.IntPtr* ppv);
	}

	public unsafe static partial class OleAut32_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("oleaut32.dll", EntryPoint="#6", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void SysFreeString(global::System.IntPtr bstr);
	}

	public unsafe static partial class api_ms_win_core_winrt_robuffer_l1_1_0_dll_PInvokes
	{
		[global::McgInterop.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-robuffer-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int RoGetBufferMarshaler(global::System.Runtime.InteropServices.IMarshal__System_Runtime_WindowsRuntime__Impl.Vtbl*** bufferMarshalerPtr);
	}
}

